#include<iostream>
#include<math.h>
using namespace std;
class Circle2D
{
private:
	double x,y;
	double r;
public:
	const void getx(double px)
		{
			x=px;
		}
	const void gety(double py)
		{
			y=py;
		}
	const void getr(double pr)
		{
			r=pr;
		}
	Circle2D()
		{
			x=0;y=0;r=1;
		}
	Circle2D(double px,double py,double pr)
		{
			x=px;y=py;r=pr;
		}
	double getArea() const
		{
			return 3.1416*r*r;
		}
	double getPerimeter() const
		{
			return 3.1416*2*r;
		}
	bool contains(double x, double y) const
		{
			return(  (pow(x-this->x,2)  +   pow(y-this->y,2)  -r*r  )<0 );
		}
	bool contains(const Circle2D& circle)const 
		{
			return ((sqrt(pow(x-circle.x,2)  +   pow(y-circle.y,2))+circle.r)<=r);
		}
	bool overlaps(const Circle2D& circle)const
		{	
			return( x==circle.x && y==circle.y && r==circle.r);
		}
};
int main()
{
	Circle2D  c1(2,2,5.5);
	Circle2D  c2(2,2,2.5);
	Circle2D  c3(4,5,10.5);
	cout<<c1.getArea()<<endl;
	cout<<c1.getPerimeter()<<endl;
	cout<<c1.contains(3,3)<<endl;
	cout<<c1.contains(c2)<<endl;
	cout<<c1.overlaps(c3)<<endl;
	return 0;
}
